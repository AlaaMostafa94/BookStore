@model BookShop.DAL.Book
@{
    ViewBag.Title = "Edit Book";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/Admin/GetAllBooks">Books</a></li>
        <li class="breadcrumb-item active" aria-current="page">Edit Book</li>
    </ol>
</nav>
<div class="card container">
    <br />
    <form method="post" action="/Admin/EditBook/@Model.ID" enctype="multipart/form-data">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="form-group row">
            <label for="bookTitle" class="col-md-2 col-xs-2 col-form-label form-control-label">Title</label>
            <div class="col-sm-10 col-md-3">
                <input class="form-control" value="@Model.Title" type="text" maxlength="40" name="title" id="bookTitle">
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger", id = "titleErrorMsg" })

            </div>
        </div>
        <div class="form-group row">
            <label for="bookDescription" class="col-md-2 col-xs-2 col-form-label form-control-label">Description</label>
            <div class="col-sm-10 col-md-3">
                <input class="form-control" value="@Model.Description" type="text" maxlength="300" name="Description" id="bookDescription">
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger", id = "descriptionErrorMsg" })

            </div>
        </div>

        <div class="form-group row">
            <label for="bookClassification" class="col-md-2 col-xs-2 col-form-label form-control-label">Classification</label>
            <div class="col-sm-10 col-md-3">
                <select class="form-control" name="ClassificationID" id="bookClassification">
                    @foreach (var item in ViewBag.classifications)
                    {
                        if (item.ID == Model.ClassificationID)
                        {
                            <option value="@item.ID" selected>@item.Name</option>

                        }
                        else
                        {
                            <option value="@item.ID">@item.Name</option>

                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.ClassificationID, "", new { @class = "text-danger", id = "classificationErrorMsg" })

            </div>
        </div>

        <div class="form-group row">
            <label for="bookAuthor" class="col-md-2 col-xs-2 col-form-label form-control-label">Author</label>
            <div class="col-sm-10 col-md-3">
                <select class="form-control" name="AuthorID" id="bookAuthor">
                    @foreach (var item in ViewBag.authors)
                    {
                        if (item.ID == Model.AuthorID)
                        {
                            <option value="@item.ID" selected>@item.Name</option>

                        }
                        else
                        {
                            <option value="@item.ID">@item.Name</option>

                        }
                    }
                </select>
                @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger", id = "authorErrorMsg" })

            </div>
        </div>
        <div class="form-group row">
            <label for="bookCoverPicture" class="col-md-2 col-xs-2 col-form-label form-control-label">Cover Photo</label>
            <div class="col-sm-10 col-md-3">
                <input class="form-control" type="file" name="coverPictureFile" id="bookCoverPicture">
                @Html.ValidationMessageFor(model => model.CoverPicture, "", new { @class = "text-danger", id = "coverErrorMsg" })

            </div>
        </div>

        <div class="form-group row">
            <label for="bookContent" class="col-md-2 col-xs-2 col-form-label form-control-label">Content</label>
            <div class="col-sm-10 col-md-3">
                <input class="form-control" type="file" name="bookContentFile" id="bookContent">
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger", id = "contentErrorMsg" })

            </div>
        </div>
        <button onclick="window.history.back()" class="btn btn-primary" title="Back"><i class="fa fa-arrow-left"></i></button>

        <input type="submit" value="Save" class="btn btn-primary waves-effect waves-light" />
        <br /><br />
    </form>
</div>